{
  "name": "ocean-drive",
  "version": "1.0.0",
  "private": true,
  "description": "Ocean Drive client side apps",
  "keywords": [
    "web3.storage"
  ],
  "license": "MIT",
  "author": "CONUN GLOBAL <jamshid@conun.co.kr>",
  "main": "./electron/main.js",
  "scripts": {
    "publish:mac": "npm run build && electron-builder --mac --publish always ",
    "publish:win": "npm run build && electron-builder --win --publish always",
    "build": "yarn clean && yarn build:base && cross-env PUBLIC_URL=./ yarn build:web && cross-env PUBLIC_URL=./ yarn build:web:post",
<<<<<<< HEAD
    "build:web": "pushd \"./apps/web\" && yarn build && popd",
=======
    "build:web": "pushd \"./apps/web\" && cross-env yarn build && popd",
>>>>>>> 6850140... build file configured
    "build:base": "yarn compile",
    "build:mac": "npm run build && electron-builder --mac ",
    "build:win": "npm run build && electron-builder --win ",
    "build:web:post": "shx cp -Rf ./apps/web/build build/web && shx cp -r ./private ./build",
    "wait": "wait-on http://localhost:3000",
    "start": "nodemon --watch build --exec \"yarn electron\"",
    "electron": "electron .",
    "web": "yarn workspace @ocean-drive/web start",
    "desktop": "cross-env BROWSER=none concurrently \"yarn web\" \"yarn compile -w\" \"yarn wait && yarn start\"",
    "compile": "tsc -b --incremental",
    "clean": "shx rm -f *.tsbuildinfo && shx rm -rf dist && shx rm -rf build && mkdir build"
  },
  "build": {
    "productName": "Ocean Drive",
    "extraMetadata": {
      "name": "Ocean Drive"
    },
    "files": [
<<<<<<< HEAD
      "electron",
      "build"
=======
      "dist/**/*",
      "package.json",
      "./electron",
      "./build"
>>>>>>> 6850140... build file configured
    ],
    "directories": {
      "output": "./out"
    },
    "appId": "ocean.drive.app",
    "publish": {
      "provider": "github"
    },
    "protocols": {
      "name": "Ocean Drive",
      "schemes": [
        "ocean-drive"
      ]
    },
    "mac": {
      "category": "public.app-category.productivity",
      "extendInfo": {
        "CFBundleURLTypes": [
          {
            "CFBundleURLSchemes": [
              "ocean-drive"
            ],
            "CFBundleURLName": "Ocean Drive"
          }
        ]
      },
      "gatekeeperAssess": false,
      "hardenedRuntime": true
    },
    "win": {
      "target": [
        "nsis"
      ],
<<<<<<< HEAD
      "legalTrademarks": "CONUN GLOBAL",
      "artifactName": "${productName}-Setup-${version}.${ext}",
      "certificateFile": "build/private/conun.io.certificate.pfx",
=======
      "icon": "./electron/assets/icon.png",
      "legalTrademarks": "CONUN GLOBAL",
      "artifactName": "${productName}-Setup-${version}.${ext}",
      "certificateFile": "private/conun.io.certificate.pfx",
>>>>>>> 6850140... build file configured
      "certificatePassword": "",
      "verifyUpdateCodeSignature": "false",
      "publisherName": "conun.io.certificate"
    },
    "linux": {
      "category": "Utility",
      "target": "deb",
      "mimeTypes": [
        "x-scheme-handler/ocean-drive"
      ],
      "desktop": {
        "exec": "ocean-drive %U"
      }
    },
    "nsis": {
      "oneClick": false,
      "allowElevation": true,
      "allowToChangeInstallationDirectory": true,
      "createDesktopShortcut": true,
      "deleteAppDataOnUninstall": true
    }
  },
  "dependencies": {
<<<<<<< HEAD
    "@conun-global/web3.storage": "1.1.4",
    "electron-serve": "^1.1.0"
=======
    "@conun-global/web3.storage": "1.1.4"
>>>>>>> 6850140... build file configured
  },
  "devDependencies": {
    "@parcel/transformer-sass": "2.5.0",
    "@types/react": "^18.0.9",
    "@types/react-dom": "^18.0.4",
    "electron": "^17.0.0",
    "electron-builder": "^23.0.3",
<<<<<<< HEAD
    "electron-rebuild": "^3.1.1",
    "nodemon": "^2.0.16",
=======
>>>>>>> 6850140... build file configured
    "parcel": "^2.5.0",
    "typescript": "^4.6.4"
  },
  "workspaces": {
    "packages": [
      "apps/*",
      "apps/**/*"
    ]
  },
  "greenkeeper": {
    "ignore": [
      "electron"
    ]
  }
}
